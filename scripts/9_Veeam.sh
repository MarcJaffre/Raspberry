#!/usr/bin/bash

######################################################################################################################################################################################
# Auteur      : Marc Jaffre
# Version     : Alpha 0.1
# Description : Archivage de donnee
######################################################################################################################################################################################

######################################################################################################################################################################################
# Configuration du script #
###########################
MOUNT_SHARE_HOST=""
MOUNT_SHARE_DOMAINE=""
MOUNT_SHARE_USER=""
MOUNT_SHARE_PASS=""
MOUNT_SHARE_FOLDER=""
MOUNT_LOCAL_SHARE=""



######################################################################################################################################################################################
# Configuration de l-archivage #
################################
RSYNC_OPTION="-avz"
RSYNC_SIMUL="-–dry-run"
BACKUP_SOURCE_1="/root"
BACKUP_SOURCE_2=""
BACKUP_SOURCE_3=""
BACKUP_SOURCE_4=""
BACKUP_SOURCE_5=""
BACKUP_SOURCE_6=""
BACKUP_SOURCE_7=""



######################################################################################################################################################################################
# Nettoyage console #
#####################
clear;

######################################################################################################################################################################################
# Verification Repertoire #
###########################
# Action si variable a un conteneur
if [ ! -z $MOUNT_LOCAL_SHARE ];then
  # Verifie si le dossier est present. Si absent creation de dossier
  if [ ! -d $MOUNT_LOCAL_SHARE 2>/dev/null ];then
   mkdir -p $MOUNT_LOCAL_SHARE 2>/dev/null;
  else
   # Si dossier present, message OK
   echo "Dossier present, aucune action necessaire.";
  fi
fi


######################################################################################################################################################################################
# Montage de la partition #
###########################

# Verification du montage (Mot cle: IP puis Nom du partage puis POINT DE MONTAGE LOCAL)
VERIFICATION_MONTAGE=$(mount | grep $MOUNT_SHARE_HOST | grep $MOUNT_SHARE_USER | grep $MOUNT_LOCAL_SHARE )
# =============================================================================================================================================================================
if   [ -z "${VERIFICATION_MONTAGE}" ]; then
     # ========================================================================================================================================================================
     umount -l $MOUNT_LOCAL_SHARE 2>/dev/null;
     # ========================================================================================================================================================================
     if [ -z $MOUNT_SHARE_DOMAINE ];then
       mount -t cifs -o username="$MOUNT_SHARE_USER",password="$MOUNT_SHARE_PASS" //$MOUNT_SHARE_HOST/$MOUNT_SHARE_FOLDER $MOUNT_LOCAL_SHARE
       echo "Montage du partage"
     fi
     # ========================================================================================================================================================================
     if [ ! -z $MOUNT_SHARE_DOMAINE ];then
       mount -t cifs -o \username="$MOUNT_SHARE_USER",password="$MOUNT_SHARE_PASS",domain="$MOUNT_SHARE_DOMAINE" //$MOUNT_SHARE_HOST/$MOUNT_SHARE_FOLDER $MOUNT_LOCAL_SHARE
       echo "Montage du partage"
     fi

  # ===========================================================================================================================================================================

  elif [ ! -z "${VERIFICATION_MONTAGE}" ];then
     # ========================================================================================================================================================================
     echo "Montage deja present";
     # ========================================================================================================================================================================
fi
# =============================================================================================================================================================================


######################################################################################################################################################################################
# Sauvegarde de donnée #
########################

# Si la variable BACKUP_SOURCE_1 est pas vide, alors lancer la sauvegarde
if [ ! -z "${BACKUP_SOURCE_1}" ];then
 echo rsync $RSYNC_OPTION $RSYNC_SIMUL  $BACKUP_SOURCE_1 $MOUNT_LOCAL_SHARE/TEST
fi

if [ ! -z "${BACKUP_SOURCE_2}" ];then
 echo rsync $RSYNC_OPTION $RSYNC_SIMUL $BACKUP_SOURCE_2 $MOUNT_LOCAL_SHARE/TEST
fi
